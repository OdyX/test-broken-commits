<?xml version="1.0"?>
<!DOCTYPE refentry PUBLIC "-//OASIS//DTD DocBook XML V4.1.2//EN" 
               "http://www.oasis-open.org/docbook/xml/4.1.2/docbookx.dtd">
<refentry id="poppler-poppler-page">
<refmeta>
<refentrytitle role="top_of_page">PopplerPage</refentrytitle>
<manvolnum>3</manvolnum>
<refmiscinfo>POPPLER Library</refmiscinfo>
</refmeta>

<refnamediv>
<refname>PopplerPage</refname>
<refpurpose>Information about a page in a document</refpurpose>
<!--[<xref linkend="desc" endterm="desc.title"/>]-->
</refnamediv>

<refsynopsisdiv role="synopsis">
<title role="synopsis.title">Synopsis</title>

<synopsis>



<link linkend="void">void</link>        <link linkend="poppler-page-render-to-pixbuf">poppler_page_render_to_pixbuf</link>   (<link linkend="PopplerPage">PopplerPage</link> *page,
                                             <link linkend="int">int</link> src_x,
                                             <link linkend="int">int</link> src_y,
                                             <link linkend="int">int</link> src_width,
                                             <link linkend="int">int</link> src_height,
                                             <link linkend="double">double</link> scale,
                                             <link linkend="int">int</link> rotation,
                                             <link linkend="GdkPixbuf">GdkPixbuf</link> *pixbuf);
<link linkend="void">void</link>        <link linkend="poppler-page-get-size">poppler_page_get_size</link>           (<link linkend="PopplerPage">PopplerPage</link> *page,
                                             <link linkend="double">double</link> *width,
                                             <link linkend="double">double</link> *height);
<link linkend="int">int</link>         <link linkend="poppler-page-get-index">poppler_page_get_index</link>          (<link linkend="PopplerPage">PopplerPage</link> *page);
<link linkend="GdkPixbuf">GdkPixbuf</link>*  <link linkend="poppler-page-get-thumbnail">poppler_page_get_thumbnail</link>      (<link linkend="PopplerPage">PopplerPage</link> *page);
<link linkend="gboolean">gboolean</link>    <link linkend="poppler-page-get-thumbnail-size">poppler_page_get_thumbnail_size</link> (<link linkend="PopplerPage">PopplerPage</link> *page,
                                             <link linkend="int">int</link> *width,
                                             <link linkend="int">int</link> *height);
<link linkend="GList">GList</link>*      <link linkend="poppler-page-find-text">poppler_page_find_text</link>          (<link linkend="PopplerPage">PopplerPage</link> *page,
                                             const <link linkend="char">char</link> *text);
<link linkend="void">void</link>        <link linkend="poppler-page-render-to-ps">poppler_page_render_to_ps</link>       (<link linkend="PopplerPage">PopplerPage</link> *page,
                                             <link linkend="PopplerPSFile">PopplerPSFile</link> *ps_file);
<link linkend="char">char</link>*       <link linkend="poppler-page-get-text">poppler_page_get_text</link>           (<link linkend="PopplerPage">PopplerPage</link> *page,
                                             <link linkend="PopplerRectangle">PopplerRectangle</link> *rect);
<link linkend="GList">GList</link>*      <link linkend="poppler-page-get-link-mapping">poppler_page_get_link_mapping</link>   (<link linkend="PopplerPage">PopplerPage</link> *page);
<link linkend="void">void</link>        <link linkend="poppler-page-free-link-mapping">poppler_page_free_link_mapping</link>  (<link linkend="GList">GList</link> *list);
<link linkend="GdkRegion">GdkRegion</link>*  <link linkend="poppler-page-get-selection-region">poppler_page_get_selection_region</link>
                                            (<link linkend="PopplerPage">PopplerPage</link> *page,
                                             <link linkend="gdouble">gdouble</link> scale,
                                             <link linkend="PopplerRectangle">PopplerRectangle</link> *selection);
<link linkend="void">void</link>        <link linkend="poppler-page-render-selection">poppler_page_render_selection</link>   (<link linkend="PopplerPage">PopplerPage</link> *page,
                                             <link linkend="gdouble">gdouble</link> scale,
                                             <link linkend="int">int</link> rotation,
                                             <link linkend="GdkPixbuf">GdkPixbuf</link> *pixbuf,
                                             <link linkend="PopplerRectangle">PopplerRectangle</link> *selection,
                                             <link linkend="PopplerRectangle">PopplerRectangle</link> *old_selection,
                                             <link linkend="GdkColor">GdkColor</link> *glyph_color,
                                             <link linkend="GdkColor">GdkColor</link> *background_color);
#define     <link linkend="POPPLER-TYPE-RECTANGLE:CAPS">POPPLER_TYPE_RECTANGLE</link>
            <link linkend="PopplerRectangle">PopplerRectangle</link>;
<link linkend="GType">GType</link>       <link linkend="poppler-rectangle-get-type">poppler_rectangle_get_type</link>      (void);
<link linkend="PopplerRectangle">PopplerRectangle</link>* <link linkend="poppler-rectangle-new">poppler_rectangle_new</link>     (void);
<link linkend="PopplerRectangle">PopplerRectangle</link>* <link linkend="poppler-rectangle-copy">poppler_rectangle_copy</link>    (<link linkend="PopplerRectangle">PopplerRectangle</link> *rectangle);
<link linkend="void">void</link>        <link linkend="poppler-rectangle-free">poppler_rectangle_free</link>          (<link linkend="PopplerRectangle">PopplerRectangle</link> *rectangle);
#define     <link linkend="POPPLER-TYPE-LINK-MAPPING:CAPS">POPPLER_TYPE_LINK_MAPPING</link>
            <link linkend="PopplerLinkMapping">PopplerLinkMapping</link>;
<link linkend="GType">GType</link>       <link linkend="poppler-link-mapping-get-type">poppler_link_mapping_get_type</link>   (void);
<link linkend="PopplerLinkMapping">PopplerLinkMapping</link>* <link linkend="poppler-link-mapping-new">poppler_link_mapping_new</link>
                                            (void);
<link linkend="PopplerLinkMapping">PopplerLinkMapping</link>* <link linkend="poppler-link-mapping-copy">poppler_link_mapping_copy</link>
                                            (<link linkend="PopplerLinkMapping">PopplerLinkMapping</link> *mapping);
<link linkend="void">void</link>        <link linkend="poppler-link-mapping-free">poppler_link_mapping_free</link>       (<link linkend="PopplerLinkMapping">PopplerLinkMapping</link> *mapping);

</synopsis>
</refsynopsisdiv>









<refsect1 role="desc">
<title role="desc.title">Description</title>
<para>

</para>
</refsect1>

<refsect1 role="details">
<title role="details.title">Details</title>
<refsect2>
<title><anchor id="poppler-page-render-to-pixbuf" role="function"/>poppler_page_render_to_pixbuf ()</title>
<indexterm><primary>poppler_page_render_to_pixbuf</primary></indexterm><programlisting><link linkend="void">void</link>        poppler_page_render_to_pixbuf   (<link linkend="PopplerPage">PopplerPage</link> *page,
                                             <link linkend="int">int</link> src_x,
                                             <link linkend="int">int</link> src_y,
                                             <link linkend="int">int</link> src_width,
                                             <link linkend="int">int</link> src_height,
                                             <link linkend="double">double</link> scale,
                                             <link linkend="int">int</link> rotation,
                                             <link linkend="GdkPixbuf">GdkPixbuf</link> *pixbuf);</programlisting>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>page</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>src_x</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>src_y</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>src_width</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>src_height</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>scale</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>rotation</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>pixbuf</parameter>&nbsp;:</term>
<listitem><simpara>


</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="poppler-page-get-size" role="function"/>poppler_page_get_size ()</title>
<indexterm><primary>poppler_page_get_size</primary></indexterm><programlisting><link linkend="void">void</link>        poppler_page_get_size           (<link linkend="PopplerPage">PopplerPage</link> *page,
                                             <link linkend="double">double</link> *width,
                                             <link linkend="double">double</link> *height);</programlisting>
<para>
Gets the size of <parameter>page</parameter> at the current scale and rotation.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>page</parameter>&nbsp;:</term>
<listitem><simpara> A <link linkend="PopplerPage"><type>PopplerPage</type></link>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>width</parameter>&nbsp;:</term>
<listitem><simpara> return location for the width of <parameter>page</parameter>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>height</parameter>&nbsp;:</term>
<listitem><simpara> return location for the height of <parameter>page</parameter>
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="poppler-page-get-index" role="function"/>poppler_page_get_index ()</title>
<indexterm><primary>poppler_page_get_index</primary></indexterm><programlisting><link linkend="int">int</link>         poppler_page_get_index          (<link linkend="PopplerPage">PopplerPage</link> *page);</programlisting>
<para>
Returns the index of <parameter>page</parameter></para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>page</parameter>&nbsp;:</term>
<listitem><simpara> a <link linkend="PopplerPage"><type>PopplerPage</type></link>
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara> index value of <parameter>page</parameter>
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="poppler-page-get-thumbnail" role="function"/>poppler_page_get_thumbnail ()</title>
<indexterm><primary>poppler_page_get_thumbnail</primary></indexterm><programlisting><link linkend="GdkPixbuf">GdkPixbuf</link>*  poppler_page_get_thumbnail      (<link linkend="PopplerPage">PopplerPage</link> *page);</programlisting>
<para>
Get the embedded thumbnail for the specified page.  If the document
doesn't have an embedded thumbnail for the page, this function
returns <link linkend="NULL:CAPS"><literal>NULL</literal></link>.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>page</parameter>&nbsp;:</term>
<listitem><simpara> the <link linkend="PopperPage"><type>PopperPage</type></link> to get the thumbnail for
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara> the tumbnail as a <link linkend="GdkPixbuf"><type>GdkPixbuf</type></link> or <link linkend="NULL:CAPS"><literal>NULL</literal></link> if the document
doesn't have a thumbnail for this page.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="poppler-page-get-thumbnail-size" role="function"/>poppler_page_get_thumbnail_size ()</title>
<indexterm><primary>poppler_page_get_thumbnail_size</primary></indexterm><programlisting><link linkend="gboolean">gboolean</link>    poppler_page_get_thumbnail_size (<link linkend="PopplerPage">PopplerPage</link> *page,
                                             <link linkend="int">int</link> *width,
                                             <link linkend="int">int</link> *height);</programlisting>
<para>
Returns <link linkend="TRUE:CAPS"><literal>TRUE</literal></link> if <parameter>page</parameter> has a thumbnail associated with it.  It also
fills in <parameter>width</parameter> and <parameter>height</parameter> with the width and height of the
thumbnail.  The values of width and height are not changed if no
appropriate thumbnail exists.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>page</parameter>&nbsp;:</term>
<listitem><simpara> A <link linkend="PopplerPage"><type>PopplerPage</type></link>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>width</parameter>&nbsp;:</term>
<listitem><simpara> return location for width
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>height</parameter>&nbsp;:</term>
<listitem><simpara> return location for height
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara> <link linkend="TRUE:CAPS"><literal>TRUE</literal></link>, if <parameter>page</parameter> has a thumbnail associated with it.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="poppler-page-find-text" role="function"/>poppler_page_find_text ()</title>
<indexterm><primary>poppler_page_find_text</primary></indexterm><programlisting><link linkend="GList">GList</link>*      poppler_page_find_text          (<link linkend="PopplerPage">PopplerPage</link> *page,
                                             const <link linkend="char">char</link> *text);</programlisting>
<para>
A <link linkend="GList"><type>GList</type></link> of rectangles for each occurance of the text on the page.
The coordinates are in PDF points.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>page</parameter>&nbsp;:</term>
<listitem><simpara> a <link linkend="PopplerPage"><type>PopplerPage</type></link>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>text</parameter>&nbsp;:</term>
<listitem><simpara> the text to search for (UTF-8 encoded)
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara> a <link linkend="GList"><type>GList</type></link> of PopplerRectangle, 
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="poppler-page-render-to-ps" role="function"/>poppler_page_render_to_ps ()</title>
<indexterm><primary>poppler_page_render_to_ps</primary></indexterm><programlisting><link linkend="void">void</link>        poppler_page_render_to_ps       (<link linkend="PopplerPage">PopplerPage</link> *page,
                                             <link linkend="PopplerPSFile">PopplerPSFile</link> *ps_file);</programlisting>
<para>
Render the page on a postscript file</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>page</parameter>&nbsp;:</term>
<listitem><simpara> a <link linkend="PopplerPage"><type>PopplerPage</type></link>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>ps_file</parameter>&nbsp;:</term>
<listitem><simpara> the PopplerPSFile to render to
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="poppler-page-get-text" role="function"/>poppler_page_get_text ()</title>
<indexterm><primary>poppler_page_get_text</primary></indexterm><programlisting><link linkend="char">char</link>*       poppler_page_get_text           (<link linkend="PopplerPage">PopplerPage</link> *page,
                                             <link linkend="PopplerRectangle">PopplerRectangle</link> *rect);</programlisting>
<para>
Retrieves the contents of the specified rectangle as text</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>page</parameter>&nbsp;:</term>
<listitem><simpara> a <link linkend="PopplerPage"><type>PopplerPage</type></link>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>rect</parameter>&nbsp;:</term>
<listitem><simpara> the rectangle including the text
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara> a pointer to the contents of the rectangle
              as a string
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="poppler-page-get-link-mapping" role="function"/>poppler_page_get_link_mapping ()</title>
<indexterm><primary>poppler_page_get_link_mapping</primary></indexterm><programlisting><link linkend="GList">GList</link>*      poppler_page_get_link_mapping   (<link linkend="PopplerPage">PopplerPage</link> *page);</programlisting>
<para>
Returns a list of <link linkend="PopplerLinkMapping"><type>PopplerLinkMapping</type></link> items that map from a
location on <parameter>page</parameter> to a <link linkend="PopplerAction"><type>PopplerAction</type></link>.  This list must be freed
with <link linkend="poppler-page-free-link-mapping"><function>poppler_page_free_link_mapping()</function></link> when done.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>page</parameter>&nbsp;:</term>
<listitem><simpara> A <link linkend="PopplerPage"><type>PopplerPage</type></link>
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara> A <link linkend="GList"><type>GList</type></link> of <link linkend="PopplerLinkMapping"><type>PopplerLinkMapping</type></link>
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="poppler-page-free-link-mapping" role="function"/>poppler_page_free_link_mapping ()</title>
<indexterm><primary>poppler_page_free_link_mapping</primary></indexterm><programlisting><link linkend="void">void</link>        poppler_page_free_link_mapping  (<link linkend="GList">GList</link> *list);</programlisting>
<para>
Frees a list of <link linkend="PopplerLinkMapping"><type>PopplerLinkMapping</type></link><!-- -->s allocated by
<link linkend="poppler-page-get-link-mapping"><function>poppler_page_get_link_mapping()</function></link>.  It also frees the <link linkend="PopplerAction"><type>PopplerAction</type></link><!-- -->s
that each mapping contains, so if you want to keep them around, you need to
copy them with <link linkend="poppler-action-copy"><function>poppler_action_copy()</function></link>.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>list</parameter>&nbsp;:</term>
<listitem><simpara> A list of <link linkend="PopplerLinkMapping"><type>PopplerLinkMapping</type></link><!-- -->s
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="poppler-page-get-selection-region" role="function"/>poppler_page_get_selection_region ()</title>
<indexterm><primary>poppler_page_get_selection_region</primary></indexterm><programlisting><link linkend="GdkRegion">GdkRegion</link>*  poppler_page_get_selection_region
                                            (<link linkend="PopplerPage">PopplerPage</link> *page,
                                             <link linkend="gdouble">gdouble</link> scale,
                                             <link linkend="PopplerRectangle">PopplerRectangle</link> *selection);</programlisting>
<para>
Returns a region containing the area that would be rendered by
<link linkend="poppler-page-render-selection"><function>poppler_page_render_selection()</function></link>.  The returned region must be freed with
<link linkend="gdk-region-destroy"><function>gdk_region_destroy()</function></link>.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>page</parameter>&nbsp;:</term>
<listitem><simpara> a <link linkend="PopplerPage"><type>PopplerPage</type></link>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>scale</parameter>&nbsp;:</term>
<listitem><simpara> scale specified as pixels per point
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>selection</parameter>&nbsp;:</term>
<listitem><simpara> start and end point of selection as a rectangle
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara> a newly allocated <link linkend="GdkRegion"><type>GdkRegion</type></link>
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="poppler-page-render-selection" role="function"/>poppler_page_render_selection ()</title>
<indexterm><primary>poppler_page_render_selection</primary></indexterm><programlisting><link linkend="void">void</link>        poppler_page_render_selection   (<link linkend="PopplerPage">PopplerPage</link> *page,
                                             <link linkend="gdouble">gdouble</link> scale,
                                             <link linkend="int">int</link> rotation,
                                             <link linkend="GdkPixbuf">GdkPixbuf</link> *pixbuf,
                                             <link linkend="PopplerRectangle">PopplerRectangle</link> *selection,
                                             <link linkend="PopplerRectangle">PopplerRectangle</link> *old_selection,
                                             <link linkend="GdkColor">GdkColor</link> *glyph_color,
                                             <link linkend="GdkColor">GdkColor</link> *background_color);</programlisting>
<para>
Render the selection specified by <parameter>selection</parameter> for <parameter>page</parameter> into
<parameter>pixbuf</parameter>.  The selection will be rendered at <parameter>scale</parameter>, using
<parameter>glyph_color</parameter> for the glyphs and <parameter>background_color</parameter> for the selection
background.
</para>
<para>
If non-NULL, <parameter>old_selection</parameter> specifies the selection that is already
rendered in <parameter>pixbuf</parameter>, in which case this function will (some day)
only render the changed part of the selection.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>page</parameter>&nbsp;:</term>
<listitem><simpara> the <link linkend="PopplerPage"><type>PopplerPage</type></link> for which to render selection
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>scale</parameter>&nbsp;:</term>
<listitem><simpara> scale specified as pixels per point
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>rotation</parameter>&nbsp;:</term>
<listitem><simpara> rotate the document by the specified degree
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>pixbuf</parameter>&nbsp;:</term>
<listitem><simpara> pixbuf to render to
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>selection</parameter>&nbsp;:</term>
<listitem><simpara> start and end point of selection as a rectangle
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>old_selection</parameter>&nbsp;:</term>
<listitem><simpara> previous selection
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>glyph_color</parameter>&nbsp;:</term>
<listitem><simpara> color to use for drawing glyphs
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>background_color</parameter>&nbsp;:</term>
<listitem><simpara> color to use for the selection background
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="POPPLER-TYPE-RECTANGLE:CAPS" role="macro"/>POPPLER_TYPE_RECTANGLE</title>
<indexterm><primary>POPPLER_TYPE_RECTANGLE</primary></indexterm><programlisting>#define POPPLER_TYPE_RECTANGLE             (poppler_rectangle_get_type ())
</programlisting>
<para>

</para></refsect2>
<refsect2>
<title><anchor id="PopplerRectangle" role="struct"/>PopplerRectangle</title>
<indexterm><primary>PopplerRectangle</primary></indexterm><programlisting>typedef struct {
  gdouble x1;
  gdouble y1;
  gdouble x2;
  gdouble y2;
} PopplerRectangle;
</programlisting>
<para>

</para></refsect2>
<refsect2>
<title><anchor id="poppler-rectangle-get-type" role="function"/>poppler_rectangle_get_type ()</title>
<indexterm><primary>poppler_rectangle_get_type</primary></indexterm><programlisting><link linkend="GType">GType</link>       poppler_rectangle_get_type      (void);</programlisting>
<para>

</para><variablelist role="params">
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara>


</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="poppler-rectangle-new" role="function"/>poppler_rectangle_new ()</title>
<indexterm><primary>poppler_rectangle_new</primary></indexterm><programlisting><link linkend="PopplerRectangle">PopplerRectangle</link>* poppler_rectangle_new     (void);</programlisting>
<para>

</para><variablelist role="params">
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara>


</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="poppler-rectangle-copy" role="function"/>poppler_rectangle_copy ()</title>
<indexterm><primary>poppler_rectangle_copy</primary></indexterm><programlisting><link linkend="PopplerRectangle">PopplerRectangle</link>* poppler_rectangle_copy    (<link linkend="PopplerRectangle">PopplerRectangle</link> *rectangle);</programlisting>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>rectangle</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara>


</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="poppler-rectangle-free" role="function"/>poppler_rectangle_free ()</title>
<indexterm><primary>poppler_rectangle_free</primary></indexterm><programlisting><link linkend="void">void</link>        poppler_rectangle_free          (<link linkend="PopplerRectangle">PopplerRectangle</link> *rectangle);</programlisting>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>rectangle</parameter>&nbsp;:</term>
<listitem><simpara>


</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="POPPLER-TYPE-LINK-MAPPING:CAPS" role="macro"/>POPPLER_TYPE_LINK_MAPPING</title>
<indexterm><primary>POPPLER_TYPE_LINK_MAPPING</primary></indexterm><programlisting>#define POPPLER_TYPE_LINK_MAPPING             (poppler_link_mapping_get_type ())
</programlisting>
<para>

</para></refsect2>
<refsect2>
<title><anchor id="PopplerLinkMapping" role="struct"/>PopplerLinkMapping</title>
<indexterm><primary>PopplerLinkMapping</primary></indexterm><programlisting>typedef struct {
  PopplerRectangle area;
  PopplerAction *action;
} PopplerLinkMapping;
</programlisting>
<para>

</para></refsect2>
<refsect2>
<title><anchor id="poppler-link-mapping-get-type" role="function"/>poppler_link_mapping_get_type ()</title>
<indexterm><primary>poppler_link_mapping_get_type</primary></indexterm><programlisting><link linkend="GType">GType</link>       poppler_link_mapping_get_type   (void);</programlisting>
<para>

</para><variablelist role="params">
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara>


</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="poppler-link-mapping-new" role="function"/>poppler_link_mapping_new ()</title>
<indexterm><primary>poppler_link_mapping_new</primary></indexterm><programlisting><link linkend="PopplerLinkMapping">PopplerLinkMapping</link>* poppler_link_mapping_new
                                            (void);</programlisting>
<para>

</para><variablelist role="params">
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara>


</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="poppler-link-mapping-copy" role="function"/>poppler_link_mapping_copy ()</title>
<indexterm><primary>poppler_link_mapping_copy</primary></indexterm><programlisting><link linkend="PopplerLinkMapping">PopplerLinkMapping</link>* poppler_link_mapping_copy
                                            (<link linkend="PopplerLinkMapping">PopplerLinkMapping</link> *mapping);</programlisting>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>mapping</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara>


</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="poppler-link-mapping-free" role="function"/>poppler_link_mapping_free ()</title>
<indexterm><primary>poppler_link_mapping_free</primary></indexterm><programlisting><link linkend="void">void</link>        poppler_link_mapping_free       (<link linkend="PopplerLinkMapping">PopplerLinkMapping</link> *mapping);</programlisting>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>mapping</parameter>&nbsp;:</term>
<listitem><simpara>


</simpara></listitem></varlistentry>
</variablelist></refsect2>

</refsect1>




</refentry>
