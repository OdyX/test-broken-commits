Sorry, Only japanese.

1. ライセンス等

ライセンスは、imagetopdf.cについては、CUPSのライセンスに従います。
LICENSE.txtを見て下さい。その他のファイルに関しては、各ファイルの記述に
従って下さい。

2. 概要

imagetopdfは、CUPSのフィルタです。各種イメージファイルを入力として
PDFファイルを標準出力に出力します。
イメージファイルを直接にCUPSに渡せるようにするものです。

プログラムは、ユーザが直接使用するものでは、ありません。
ユーザはCUPSを通じて使用します。
CUPSの使用方法は、CUPSのマニュアルを見て下さい。

  以下のイメージ形式を受け付けます。

gif, png, jpeg, tiff, photocd, portable-anymap, portable-bitmap,
portable-graymap, portable-pixmap, sgi-rgb, sun-raster, xbitmap,
xpixmap, xwindowdump

  ただし、xbitmap, xpixmap, xwindowdumpに関しては、Linuxのconvertコマン
ドにより、pngに変換後に処理されます。その他の形式であっても、convertコマ
ンドでpngに変換できれば、処理可能です。

  出力は、PDFファイルとなります。PDFのバージョンは1.3です。イメージは、圧縮
無しのバイナリ形式で出力されます。

紙の印刷可能領域を越えた場合は、複数ページに分割されて出力されます。

3. 詳細

3.1 コマンド形式

 imagetopdfは、CUPSのフィルタとして動作するプログラムです。コマンド
引数、環境変数、設定ファイルはCUPSのフィルタに従います。CUPSについては、
<http://www.cups.org/>を参照して下さい。
コマンド形式は、以下です。

imagetopdf <job> <user> <title> <num-copies> <options> [<filename>]

引数の意味は以下の通りです。
<job>        : ジョブ番号。imagetopdfでは無視されます。
<user>       : ユーザ名。imagetopdfでは無視されます。
<title>      : タイトル。PDFのドキュメント情報辞書の/Title
               に設定されます。
<num-copies> : コピー数。
<options>    : オプション。後述
<filename>   : イメージファイル名。省略すると標準入力からイメージを読み
               込みます。

3.2 環境変数

参照される環境変数は、以下の通りです。
 PPD : 設定ファイルであるppdファイルのファイル名

3.3 オプション 

オプションは、引数の<options>または、ppdファイルで指定され、CUPSの方式
で指定されます。imagetopdfでは、以下のオプションが有効です。

scaling         : イメージの紙の印刷可能な大きさに対する倍率。100で紙と同じ
                  縦横比は維持されます。fitplotを無効にします。
                  省略時は、他のオプションで指定されない限り拡大/縮小しません。
                  1以上800以下を指定して下さい。それ以外の場合の動作は、
                  保証されません。
fitplot         : 真の場合、紙の印刷可能なサイズに合わせて、イメージを拡大し
                  ます。scaling=100と同じです。scalingが指定された場合は、
                  無視されます。
                   縦横比は維持されます。
ppi             : イメージの解像度を <X>または<X>x<Y>の形で指定します。
                  <X>は、X軸方向の解像度、<Y>はY軸方向の解像度です。
                  <X>だけ指定した場合は、Y軸方向の解像度もも<X>になります。
                  単位は、pixel per inch
                  省略時は、イメージファイルの指定に従います。
position        : ページ中での画像の位置。以下のいずれかです。
                  center      : 中心 (デフォルト)
                  top         : 上部で左右は中心
                  bottom      : 下部で左右は中心
                  left        : 左で、上下は中心
                  right       : 右で、上下は中心
                  top-left    : 左上
                  top-right   : 右上
                  bottom-left : 左下
                  bottom-right: 右下
mirror          : 真ならば、左右反転
natural-scaling : 倍率。100で等倍
                  もとのイメージに対する倍率で指定します。
                  縦横比は、維持します。
                  省略時は、拡大/縮小を行いません。
                  1以上800以下を指定して下さい。それ以外の場合の動作は、
                  保証されません。
landscape       : 真ならば90度回転、orientation-requestedを無効にします。
orientation-requested
                : 回転。以下のいずれかです。landscapeを指定した場合は、
                  無視されます。
                  3: 0度 (デフォルト)
                  4: 90度
                  5: -90度
                  6: 180度
PageSize        : 紙の大きさ、ppdファイルに記述した紙サイズの名前で指定
               　します。

page-left, page-right, page-bottom, page-top
                : マージンを指定して、印刷可能な矩形を示めします。
                  指定値は、各々、左、右、下、上のマージンの大きさです。
                  単位ポイント。デフォルトでは、
                  ppdファイルから印刷可能な矩形をが取得されます。
                  PageSizeも省略された場合は、
                  left = 18, right=594, bottom = 36, top = 756
                  の矩形を印刷可能な矩形とします。
                  0以上紙の大きさ以下の値を指定して下さい。
                  それ以外の値を指定した場合は、動作の保証はされません。
Collate         : 丁合い指定。真ならばコピー数が2以上の場合に、丁合い
                  用の順序で出力します。
                  デフォルトは、偽です。
                  例)
                     ドキュメントが2ページ存在し、コピー数が2の場合
                     Collateが偽の場合、1,1,2,2の順に出力
                     Collateが真の場合、1,2,1,2の順で出力
OutputOrder     : Reverseならば、ページの順序を逆順にします。
                  Reverse以外の値を指定した場合は、無視されます。
sides          : 両面印刷を指定します。
                  以下ののいずれかの値をとります。
                  one-sided : 両面印刷しません。
                  two-sided-long-edge: 長い方の端で折り返す形で両面印刷します。
                  two-sided-short-edge: 短い方の端で折り返す形で
                                          両面印刷します。
                  折り返し方を指定できないデバイスでは、
                  long-edge, short-edgeの差はありません。
                  デフォルトは、one-sidedです。
cupsEvenDuplex  : 真の場合、両面印刷でかつ奇数ページの場合に、
                  ソフトウェアで空白のページを最後に追加して偶数にします。
                 OutputOrederがReverseの場合は、最初に空白ページが印刷さ
                 れることになります。

注) landscape, orientation-requestedが指定されない場合は、
イメージが紙に収まるように必要に応じて90度の回転が行なわれることがあります。

4. 注意/制限事項等

CUPSのlibcupsimageのバグのために、cupsの修正なしでは、
PBMフォーマットおよびSUN rasterフォーマットのイメージの
印刷がうまく動作しません。(CUPS 1.2.2現在)

5. 動作の詳細

ここでは、imagetopdfをCUPSや他のフィルタ、プログラムと組み合わせたり
PPDファイルを作成したり管理するなどの技術者のために、
動作の詳細を説明します。

5.1 ハードとソフトに関係するオプションの処理について

ハードにだけ関係するオプションは、ppdにしたがってjobInfoに指定します。
しかし、ハードの状況によってソフトの処理も変更しないといけないオプショ
ンがあります。そのようなオプションの関係するハード機能は、以下です。

Collate: 丁合い
Copies:  コピー
Duplex:  両面印刷
OuputOrder: ページの逆順印刷

これらに関係するオプションおよび属性は、以下のものです。

Collate, Copies, Duplex, OutputOrder, cupsEvenDuplex, cupsManualCopies
Copies以外は、ブール型でTrueかFalseの値を持ちます。Copiesの値は、
1以上の整数です。
各オプションの意味は、以下の通りです。
Collate: 真の場合は丁合いを行ないます。
Copies:  コピー部数
Duplex:  真の場合は両面印刷を行ないます。
         sidesにtwo-sided-long-edgeまたはtwo-sided-short-edge
         のいずれかを指定した場合に、真になります。
OuputOrder: reverseの場合は、ページを逆順に印刷します。
cupsEvenDuplex: 真の場合、両面印刷の際に、ソフトでページを偶数にする必要があ
                ります。
cupsManualCopies: 真の場合、ソフトでコピーする必要があります。

ハードが機能を持つかどうかは、以下で判定します。

Collate : ppdにCollateの項目を持つ。
         Trueにするとconflictを起こす場合は、あっても使用できません。
Copies : cupsManualCopiesがFalseであること
Duplex :  ppdにDuplexの項目を持つ。
         cupsEvenDuplexが真の場合は、偶数ページでなければいけません。
OutputOrder :  ppdにOutputOrderの項目を持つ。

ハードで機能がサポートされない場合は、ソフトで行ないます。
ただし、ソフトでのCollateとは、コピーの順序が、同一ページを繰り返すの
ではなく、1ページがから最後のページまで印刷後、次のコピーの印刷を行な
う方式です。例えば、3ページのドキュメントを3部印刷する場合、通常は
1,1,1,2,2,2,3,3,3の順に印刷します。ソフトCollateの場合は、
1,2,3,1,2,3,1,2,3の順に印刷します。

さて、実際にハードの機能を利用するか、ソフトで行なうかは、これらのオプ
ションが互いに関係します。その決定方法を以下に疑似プログラムとして記述します。

変数
Copies : 指定されたCopies
Duplex : 指定されたDuplex
Collate : 指定されたDuplex
OutputOrder : 指定されたDuplex
EvenDuplex : 指定されたソフトによる偶数ページ合わせ
pages : ドキュメントのページ数
number_up : number up数

device_copies : ハードに指定するCopies
device_duplex : ハードに指定するDuplex
device_collate : ハードに指定するCollate
device_outputorder : ハードに指定するOutputOrder

soft_copies : ソフトでのCopies

device_copies = 1;
device_duplex = False;
device_collate = False;
device_outputorder = False;

if (Copies == 1) {
  /* Collate機能は、使用する必要がない */
  Collate = False;
}

if (!Duplex) {
  /* 偶数合わせは不要 */
  EvenDuplex = False;
}


if (Copies > 1 && ハードがCopies機能を持つ) device_copies = Copies;
if (Duplex && ハードがDuplex機能を持つ) {
       device_duplex = True;
} else {
   /* ソフトでDuplexは、不可能 */
}
if (Collate && ハードがColate機能を持つ) device_collate = True;
if (OutputOrder == Reverse && ハードがOuputOrder機能を持つ)
             device_outputorder = True;

if (Collate && !device_collate) {
   /* ハードのコピーでは、丁合い不可 */
              device_copies = 1;
}

if (device_copies != Copies /* ソフトコピー */ && Duplex) {
    /* ソフトCollateにしないと両面に同じページがでるなどしてしまう */
              Collate = True;
              device_collate = False;
}

if (Duplex && Collate && !device_collate) {
   /* 偶数ページ合わせしないと、前の部の最後の裏に次の部の先頭が
     印刷されてしまう */
   EvenDuplex = True;
}

if (Duplex && OutputOrder == Reverse && !device_outputorder) {
   /* 偶数ページ合わせしないと、最初のページは、表が空白になる */
   EvenDuplex = True;
}

soft_copies = device_copies > 1 ? 1 : Copies;

この時点で、Copies, Duplex, Collate, OutputOrder, EvenDuplexは、ソフト
で処理すべき値になっています。

5.2 JCLについて

Postcript(以下でPSと略します)においては、デバイスの機能の一部は、PS内
で指定でき、その場合PPDファイル内では、以下のようにPSコマンドを記述します。

*OpenUI *Resolution/Resolution : PickOne
*DefaultResolution: 600
*Resolution 300/300 dpi: "<</HWResolution[300 300]>>setpagedevice"
*Resolution 600/600 dpi: "<</HWResolution[600 600]>>setpagedevice"
*CloseUI: *Resolution

しかし、PSで記述できない機能の指定は、JCLで指定し、以下のように記述します。

*JCLOpenUI *JCLFrameBufferSize/Frame Buffer Size: PickOne
*DefaultJCLFrameBufferSize: Letter
*OrderDependency: 20 JCLSetup *JCLFrameBufferSize
*JCLFrameBufferSize Off: '@PJL SET PAGEPROTECT = OFF<0A>'
*JCLFrameBufferSize Letter: '@PJL SET PAGEPROTECT = LTR<0A>'
*JCLFrameBufferSize Legal: '@PJL SET PAGEPROTECT = LGL<0A>'
*JCLCloseUI: *JCLFrameBufferSize

PDFでは、デバイスの機能を指定する手段はないので、すべての機能指定はJCLにな
ります。

さて、あるプリンタがあって、PSにもPDFにも対応していないものとします。
その場合、今まではGhostscript(以下では、gsと略します)を使用していました。
その場合、機能指定は、PSプリンタに準じます。
さて、同じプリンタをPDFレンダラでも使用するとします。印刷ファイルがPDFなら
PDFレンダラ、PSならばgsを使用するものとします。
その場合、PS内で指定できるデバイス機能に関しては、gsを使用する場合と
PDFレンダラを使用する場合では、指定の方式が異なります。
もし、両方を指定した場合、ユーザに混乱を生じさせてしまいます。
また、デバイスが複数出力をサポートしている場合にはJCLで枚数を
指定する必要がありますが、この場合のJCL記述をPPDに指定する適切な
方法がありません。


そこで、imagetopdfの場合、以下の処理を行ないます。
(以下でJCLオプションとは、JCLOpenUIで指定されているオプションのことです。)

if (JCLBeginとJCLToPSInterperterがともにppdに指定されている場合) {
  マークされているJCLオプションで指定されているJCLを出力
}

if (pdftopdfJCLBegin属性がppdに指定されている場合) {
  その値を出力
}

if (Copiesオプションがppdファイルに存在する) {
  /* choiceとしてページ数が記述されている場合 */
  Copies属性の指定されたページ数をマークする。
} else if (ppdファイルにpdftopdfJCLCopiesが存在する) {
   JCLCopiesで指定されているJCLを出力
}

for (マークされているオプションについて) {
  if (pdftopdfJCL<マークされているオプション名>
   という属性がppdに存在する) {
     その属性値をJCLとして出力
  } else if (pdftopdfJCLBegin属性がppdに指定されている場合) {
    "<オプション名>=<マークされているチョイス>;"をJCLとして出力
  }
}
改行を出力

これにより、pdftoopvpを使用する場合
ppdに以下のような記述を追加すれば良いことになります。

*pdftopdfJCLBegin: "pdftoopvp jobInfo:"

注意:
  JCLBeginを指定する場合
  cupsのライブラリの仕様の関係上PDFであっても*JCLToPSInterpreterの指定
  が必要になります。

PPDでのチョイスの値と異なる値をjobInfoに指定したい場合は、
pdftopdfJCLで始まる属性を指定して下さい。
例えば、以下のようになっていたとします。

*OpenUI *PageSize/Page Size: PickOne
*DefaultPageSize: A4
*PageSize A4/A4: 
*PageSize Letter/US Letter:
*CloseUI: *PageSize

PageSizeにLetterを指定した場合は、JobInfoには"PageSize=Letter;"という文字列が
追加されます。
しかし、ドライバに、この機能を指定するには、"PS=LT;"という文字列をjobInfoに
指定しなければいけない場合は、これでは、うまく動作しません。このような場合は、
以下のように記述します。

*OpenUI *PageSize/Page Size: PickOne
*DefaultPageSize: A4
*PageSize A4/A4: 
*pdftopdfJCLPageSize A4/A4: "PS=A4;"
*PageSize Letter/US Letter:
*pdftopdfJCLPageSize Letter/US Letter: "PS=LT;"
*CloseUI: *PageSize

5.3 テンポラリファイルの作成場所

  imagetopdfは、必要に応じて、テンポラリファイルを作成します。これは、
CUPSのライブラリcupsTempFdを用いて行います。作成される場所は、環境変数
TMPDIRで指定されるディレクトリです。デフォルトは、/tmpです。

