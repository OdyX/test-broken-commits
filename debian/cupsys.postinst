#! /bin/sh
# postinst script for cupsys
#
# see: dh_installdeb(1)

set -e

# summary of how this script can be called:
#        * <postinst> `configure' <most-recently-configured-version>
#        * <old-postinst> `abort-upgrade' <new version>
#        * <conflictor's-postinst> `abort-remove' `in-favour' <package>
#          <new-version>
#        * <deconfigured's-postinst> `abort-deconfigure' `in-favour'
#          <failed-install-package> <version> `removing'
#          <conflicting-package> <version>
# for details, see /usr/doc/packaging-manual/
#
# quoting from the policy:
#     Any necessary prompting should almost always be confined to the
#     post-installation script, and should be protected with a conditional
#     so that unnecessary prompting doesn't happen if a package's
#     installation fails and the `postinst' is called with `abort-upgrade',
#     `abort-remove' or `abort-deconfigure'.

# Debconf
. /usr/share/debconf/confmodule

# Default Configuration file
if [ -e /etc/default/cupsys ]; then
	. /etc/default/cupsys
fi

case "$1" in
    configure)
	[ -f /etc/cups/printers.conf.save ] && mv /etc/cups/printers.conf.save /etc/cups/printers.conf
	[ -f /etc/cups/classes.conf.save ] && mv /etc/cups/classes.conf.save /etc/cups/classes.conf

	# Set up lpadmin group.
	if [ -z "`getent group lpadmin`" ]; then 
	    addgroup --system lpadmin
	fi
	if [ -n "`getent group lpadmin | awk -F: '{ print $4 }' | awk -F, '{ for (i=1; i <= NF; i++ ) print $i }' |grep '^root$'`" ]; then
	    # Bug#214746
	    echo "Deleting root from lpadmin group. If you use NIS/LDAP, change this manually."
	    deluser root lpadmin || true
	fi

	# Set up cupsys user.
	if [ -z "`getent passwd cupsys`" ]; then
	    adduser --quiet --system --no-create-home --ingroup lpadmin cupsys
	fi
	# necessary for access to local parallel and usb printers
	adduser --quiet cupsys lp
	# necessary for access to local serial printers
	adduser --quiet cupsys dialout
	# necessary for access to printer/scanner combo devices
	if [ -z "`getent group scanner`" ]; then
	    addgroup --system scanner
	fi
	adduser --quiet cupsys scanner

	if [ -d /etc/cups/certs ]; then
	    rm -rf /etc/cups/certs
	fi
	if [ -d /var/spool/cups/certs ]; then
	    mv /var/spool/cups/certs/* /var/run/cups/certs || true
	    rm -rf /var/spool/cups/certs
	fi
	if [ -d /var/lib/cups/certs ]; then
	    rm -rf /va/lib/cups/certs
	fi
	if [ -L /usr/share/ppd/cups-transitional-dir ]; then
	    rm -f /usr/share/ppd/cups-transitional-dir
	fi
	if [ -L /usr/share/cups/model/cups-included ]; then
	    rm -f /usr/share/cups/model/cups-included
	fi

	[ -f /etc/cups/ppds.dat ] && mv /etc/cups/ppds.dat /var/cache/cups/ppd

	# Set up smb backend by symlinking to smbspool.
	if [ -x /usr/bin/smbspool -a ! -e /usr/lib/cups/backend/smb ]; then
	    ln -sf /usr/bin/smbspool /usr/lib/cups/backend/smb
	fi

	# Generate raw MIME handling files if they don't already exist.
	if [ ! -e /etc/cups/raw.types ]; then
	    cat >/etc/cups/raw.types <<EOF
# This file was generated by the cupsys package.  You may change it, or
# reconfigure this file with dpkg-reconfigure.  If it is removed, it
# will be regenerated by the package scripts.

application/octet-stream
EOF
	fi
	if [ ! -e /etc/cups/raw.convs ]; then
	    cat >/etc/cups/raw.convs <<EOF
# This file was generated by the cupsys package.  You may change it, or
# reconfigure this file with dpkg-reconfigure.  If it is removed, it
# will be regenerated by the package scripts.

application/octet-stream	application/vnd.cups-raw	0	-
EOF
	fi

	# Set up raw printing of application/octet-stream if desired.
	db_fget cupsys/raw-print changed
	if [ "$RET" = "true" ]; then
	    mv /etc/cups/raw.convs /etc/cups/raw.convs-convert
	    db_get cupsys/raw-print
	    if [ "$RET" = "true" ]; then
		sed 's/^\s*#\s*application/application/' \
		    < /etc/cups/raw.convs-convert > /etc/cups/raw.convs
	    else
		sed 's/^application/#application/' \
		    < /etc/cups/raw.convs-convert > /etc/cups/raw.convs
	    fi
	    rm -f /etc/cups/raw.convs-convert
	    db_fset cupsys/raw-print changed false
	fi
	# Set up backends
	db_get cupsys/backend && SELECTED=$RET
	list=`echo $SELECTED | sed -e 's/, /,/g'`
	save_IFS=$IFS
	IFS=,
	(cd /usr/lib/cups/backend && rm -f http ipp lpd parallel scsi serial socket usb snmp)
	for module in $list; do
	  ln /usr/lib/cups/backend-available/$module /usr/lib/cups/backend/$module
	  if [ "$module" = "ipp" ]; then
            ln /usr/lib/cups/backend/ipp /usr/lib/cups/backend/http
	  fi
	done
	IFS=$save_IFS

	# Create password file for Digest authentication
        # (removed: Debian CUPS uses PAM and basic authentication)
	#db_get cupsys/adminpassword
        #VAL=$(echo -n "root:CUPS:$RET" | md5sum | cut -d' ' -f1)
	#if [ -f /etc/cups/passwd.md5 ]; then
        #  if [ "$(grep "^root:" /etc/cups/passwd.md5)" ]; then
	#    sed -e "s/^root:lpadmin:.*/root:lpadmin:$VAL/" /etc/cups/passwd.md5 > /etc/cups/passwd.md5.$$
	#    mv /etc/cups/passwd.md5.$$ /etc/cups/passwd.md5
        #  else
	#    echo "root:lpadmin:$VAL" >> /etc/cups/passwd.md5
        #  fi
	#else
	#  echo "root:lpadmin:$VAL" > /etc/cups/passwd.md5
	#  chown root:nogroup /etc/cups/passwd.md5
	#  chmod 600 /etc/cups/passwd.md5
	#fi

	# Revert to single file
	if [ $(dpkg --compare-versions "$2" gt 1.1.23-12 && dpkg --compare-versions "$2" lt 1.2.1-3 && echo "yes") ]; then
	  if [ -f /etc/cups/cups.d/ports.conf -o -f /etc/cups/cups.d/browse.conf ]; then
	    perl -e 'sub readfile { local($_) = @_; open(F, $_); while (<F>) { print; } }; while (<STDIN>) { s#^Include\s+(/etc/cups/cups.d/(?:ports.conf|browse.conf))#&readfile($1)#ei; print;}' < /etc/cups/cupsd.conf > /etc/cups/cupsd.conf.$$
	    mv /etc/cups/cupsd.conf.$$ /etc/cups/cupsd.conf
	    rm -f /etc/cups/cups.d/ports.conf /etc/cups/cups.d/browse.conf
	    rmdir /etc/cups/cups.d 2>/dev/null || /bin/true
	  fi
	fi
	#
	# Create /etc/cups/cups.d/ports.conf and /etc/cups/cups.d/browse.conf
	#db_get cupsys/ports
	#VAL=$(echo "$RET" | perl -e '$ret = ""; while (<STDIN>) { chomp;
	#    @values = split(/\s+/);
	#    foreach(@values) {
	#      if (/^\d+$/ && $_ >= 0 && $_ < 65536) {
	#        # PORT
	#        $ret .= "Port $_\\n";
	#      } elsif (/^\d+\.\d+\.\d+\.\d+$/ || /^\d+\.\d+\.\d+\.\d+:\d+$/) {
	#        # IP
	#        $ret .= "Listen $_\\n";
	#      } elsif (/^[a-zA-Z0-9-_.*]+$/ || /^[a-zA-Z0-9-_.*]+:\d+$/) {
	#        my($tmp) = $_;
	#        if (/^[a-zA-Z0-9-_.*]+:(\d+)$/) {
	#          if ($1 < 0 || $1 > 65535) {
	#            # ERROR
	#            $ret = "";
	#            last;
	#          }
	#        }
	#        # HOSTNAME
	#        $ret .= "Listen $_\\n";
	#      } elsif (/^\//) {
	#        # domain socket
	#        $ret .= "Listen $_\\n";
	#      } else {
	#        # ERROR
	#        $ret = "";
	#        last;
	#      }
	#    }
	#    print $ret;
	#  }')

	#if [ -z "$VAL" ]; then
	#  echo "Error: debconf has an invalid value. Run 'dpkg-reconfigure cupsys' again."
	#  return 1
	#else
	#  /bin/echo -e -n "$VAL" > /etc/cups/cups.d/ports.conf
	#fi

	#db_get cupsys/browse
	#if [ "$RET" = "true" ]; then
	#  /bin/echo "Browsing on" > /etc/cups/cups.d/browse.conf
	#else
	#  /bin/echo "Browsing off" > /etc/cups/cups.d/browse.conf
	#fi

	# permission configuration
	chown root:lp /etc/cups ; chmod 3755 /etc/cups
	chown cupsys:root /etc/cups/cupsd.conf ; chmod 644 /etc/cups/cupsd.conf
	chown root:lp /etc/cups/ppd ; chmod 755 /etc/cups/ppd
	chown cupsys:shadow /usr/lib/cups/daemon/cups-check-pam-auth
	chmod 2754 /usr/lib/cups/daemon/cups-check-pam-auth
	if [ ! -d /var/run/cups/certs ]; then
	  mkdir /var/run/cups/certs && chown cupsys:lpadmin /var/run/cups/certs \
          && chmod 511 /var/run/cups/certs
	fi
	if [ -f /etc/cups/classes.conf ]; then
	  chown root:lp /etc/cups/classes.conf ; chmod 600 /etc/cups/classes.conf
	fi
	if [ -f /etc/cups/printers.conf ]; then
	  chown root:lp /etc/cups/printers.conf ; chmod 600 /etc/cups/printers.conf
	fi
	# Add symlink to local files required by LSB
	if [ ! -e /usr/share/ppd/1-local-admin -a ! -L /usr/share/ppd/1-local-admin ]; then
	  ln -s /usr/local/share/ppd /usr/share/ppd/1-local-admin
	fi
	if [ ! -e /usr/share/ppd/2-third-party -a ! -L /usr/share/ppd/2-third-party ]; then
	  ln -s /opt/share/ppd /usr/share/ppd/2-third-party
	fi

	# fix permissions for upgrades which might have written cache files as
	# root
	if [ -d /var/cache/cups ]; then
	    chown -R cupsys:lp /var/cache/cups || true
	fi
    ;;

    abort-upgrade|abort-remove|abort-deconfigure)

    ;;

    *)
        echo "postinst called with unknown argument \`$1'" >&2
        exit 0
    ;;
esac

# dh_installdeb will replace this with shell code automatically
# generated by other debhelper scripts.

#DEBHELPER#

db_stop
exit 0


